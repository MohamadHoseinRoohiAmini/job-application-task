›
fF:\Projects\RayanKar - JobTest - C#\Mc2.CrudTest.Infrastructure\Mc2.CrudTest.Data\CustomerDbContext.cs
	namespace 	
Mc2
 
. 
CrudTest 
. 
Data 
{ 
public 

class 
CustomerDbContext "
:# $
	DbContext% .
{ 
public		 
CustomerDbContext		  
(		  !
DbContextOptions		! 1
<		1 2
CustomerDbContext		2 C
>		C D
options		E L
)		L M
:		N O
base		P T
(		T U
options		U \
)		\ ]
{

 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. +
ApplyConfigurationsFromAssembly 8
(8 9
typeof9 ?
(? @
CustomerDbContext@ Q
)Q R
.R S
AssemblyS [
)[ \
;\ ]
modelBuilder 
. 
Entity 
<  
Customer  (
>( )
() *
)* +
. 
HasKey 
( 
x 
=>  
x! "
." #
Id# %
)% &
;& '
modelBuilder 
. 
Entity 
<  
Customer  (
>( )
() *
)* +
.+ ,
HasIndex, 4
(4 5
p5 6
=>7 9
new: =
{> ?
p@ A
.A B
	FirstNameB K
,K L
pM N
.N O
LastNameO W
,W X
pY Z
.Z [
DateOfBirth[ f
}g h
)h i
.i j
IsUniquej r
(r s
)s t
;t u
} 	
public 
DbSet 
< 
Customer 
> 
Customer '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ³
lF:\Projects\RayanKar - JobTest - C#\Mc2.CrudTest.Infrastructure\Mc2.CrudTest.Data\DataServiceRegistration.cs
	namespace 	
Mc2
 
. 
CrudTest 
. 
Data 
{ 
public		 

static		 
class		 #
DataServiceRegistration		 /
{

 
public 
static 
IServiceCollection (!
ConfigureDataServices) >
(> ?
this? C
IServiceCollectionD V
servicesW _
,_ `
IConfigurationa o
configurationp }
)} ~
{ 	
services 
. 
AddDbContext !
<! "
CustomerDbContext" 3
>3 4
(4 5
options5 <
=>= ?
options 
. 
UseSqlServer $
($ %
configuration !
.! "
GetConnectionString" 5
(5 6
$str6 B
)B C
)C D
)D E
;E F
services 
. 
	AddScoped 
( 
typeof %
(% &
IGenericRepository& 8
<8 9
>9 :
): ;
,; <
typeof= C
(C D
GenericRepositoryD U
<U V
>V W
)W X
)X Y
;Y Z
services 
. 
	AddScoped 
< 
ICustomerRepository 2
,2 3
CustomerRepository4 F
>F G
(G H
)H I
;I J
return 
services 
; 
} 	
} 
} ¼$
sF:\Projects\RayanKar - JobTest - C#\Mc2.CrudTest.Infrastructure\Mc2.CrudTest.Data\Migrations\20230817083200_init.cs
	namespace 	
Mc2
 
. 
CrudTest 
. 
Data 
. 

Migrations &
{ 
public		 

partial		 
class		 
init		 
:		 
	Migration		  )
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
	FirstName 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; J
,J K
nullableL T
:T U
trueV Z
)Z [
,[ \
LastName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
DateOfBirth 
=  !
table" '
.' (
Column( .
<. /
DateTime/ 7
>7 8
(8 9
type9 =
:= >
$str? J
,J K
nullableL T
:T U
falseV [
)[ \
,\ ]
PhoneNumber 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= J
,J K
nullableL T
:T U
trueV Z
)Z [
,[ \
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
BankAccountNumber %
=& '
table( -
.- .
Column. 4
<4 5
string5 ;
>; <
(< =
type= A
:A B
$strC R
,R S
nullableT \
:\ ]
true^ b
)b c
,c d
DeletedDate 
=  !
table" '
.' (
Column( .
<. /
DateTime/ 7
>7 8
(8 9
type9 =
:= >
$str? J
,J K
nullableL T
:T U
trueV Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 2
,2 3
x4 5
=>6 8
x9 :
.: ;
Id; =
)= >
;> ?
} 
) 
; 
migrationBuilder   
.   
CreateIndex   (
(  ( )
name!! 
:!! 
$str!! B
,!!B C
table"" 
:"" 
$str"" !
,""! "
columns## 
:## 
new## 
[## 
]## 
{##  
$str##! ,
,##, -
$str##. 8
,##8 9
$str##: G
}##H I
,##I J
unique$$ 
:$$ 
true$$ 
,$$ 
filter%% 
:%% 
$str%% L
)%%L M
;%%M N
}&& 	
	protected)) 
override)) 
void)) 
Down))  $
())$ %
MigrationBuilder))% 5
migrationBuilder))6 F
)))F G
{** 	
migrationBuilder++ 
.++ 
	DropTable++ &
(++& '
name,, 
:,, 
$str,,  
),,  !
;,,! "
}-- 	
}.. 
}// ˜
tF:\Projects\RayanKar - JobTest - C#\Mc2.CrudTest.Infrastructure\Mc2.CrudTest.Data\Repositories\CustomerRepository.cs
	namespace 	
Mc2
 
. 
CrudTest 
. 
Data 
. 
Repositories (
{ 
public 

class 
CustomerRepository #
:$ %
GenericRepository& 7
<7 8
Customer8 @
>@ A
,A B
ICustomerRepositoryC V
{ 
public 
CustomerRepository !
(! "
CustomerDbContext" 3
	dbContext4 =
)= >
:? @
baseA E
(E F
	dbContextF O
)O P
{		 	
}

 	
} 
} å
sF:\Projects\RayanKar - JobTest - C#\Mc2.CrudTest.Infrastructure\Mc2.CrudTest.Data\Repositories\GenericRepository.cs
	namespace 	
Mc2
 
. 
CrudTest 
. 
Data 
. 
Repositories (
{ 
public 

class 
GenericRepository "
<" #
T# $
>$ %
:& '
IGenericRepository( :
<: ;
T; <
>< =
where> C
TD E
:F G
classH M
{ 
private 
readonly 
CustomerDbContext *

_dbContext+ 5
;5 6
public		 
GenericRepository		  
(		  !
CustomerDbContext		! 2
customerDbContext		3 D
)		D E
{

 	

_dbContext 
= 
customerDbContext *
;* +
} 	
public 
async 
Task 
< 
T 
> 
Add  
(  !
T! "
entity# )
)) *
{ 	
await 

_dbContext 
. 
AddAsync %
(% &
entity& ,
), -
;- .
await 

_dbContext 
. 
SaveChangesAsync -
(- .
). /
;/ 0
return 
entity 
; 
} 	
public 
async 
Task 
< 
T 
? 
> 
Get !
(! "
Guid" &
id' )
)) *
{ 	
return 
await 

_dbContext #
.# $
Set$ '
<' (
T( )
>) *
(* +
)+ ,
., -
	FindAsync- 6
(6 7
id7 9
)9 :
;: ;
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
T( )
>) *
>* +
GetAll, 2
(2 3
)3 4
{ 	
return 
await 

_dbContext #
.# $
Set$ '
<' (
T( )
>) *
(* +
)+ ,
., -
ToListAsync- 8
(8 9
)9 :
;: ;
} 	
public 
async 
Task 

HardDelete $
($ %
T% &
entity' -
)- .
{   	

_dbContext!! 
.!! 
Set!! 
<!! 
T!! 
>!! 
(!! 
)!! 
.!!  
Remove!!  &
(!!& '
entity!!' -
)!!- .
;!!. /
await"" 

_dbContext"" 
."" 
SaveChangesAsync"" -
(""- .
)"". /
;""/ 0
}## 	
public%% 
async%% 
Task%% 
<%% 
T%% 
>%% 
Update%% #
(%%# $
T%%$ %
entity%%& ,
)%%, -
{&& 	

_dbContext'' 
.'' 
Entry'' 
('' 
entity'' #
)''# $
.''$ %
State''% *
=''+ ,
EntityState''- 8
.''8 9
Modified''9 A
;''A B
await(( 

_dbContext(( 
.(( 
SaveChangesAsync(( -
(((- .
)((. /
;((/ 0
return)) 
entity)) 
;)) 
}** 	
}++ 
},, 